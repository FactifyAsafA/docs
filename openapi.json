{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Actor": {
				"properties": {
					"object": {
						"type": "string",
						"enum": [
							"user",
							"service_account"
						],
						"description": "Object type"
					},
					"id": {
						"type": "string",
						"description": "User or service account ID"
					},
					"name": {
						"type": "string",
						"description": "Name of the user or service account"
					}
				},
				"required": [
					"object",
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Document": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Unique identifier for the document"
					},
					"name": {
						"type": "string",
						"description": "Name of the document"
					},
					"description": {
						"type": "string",
						"description": "Description of the document"
					},
					"current_version_id": {
						"type": "string",
						"description": "Current version identifier"
					},
					"created_at": {
						"type": "string",
						"description": "Creation timestamp"
					},
					"created_by": {
						"$ref": "#/components/schemas/Actor",
						"description": "Information about who created the document"
					},
					"status": {
						"type": "string",
						"enum": [
							"processing",
							"done",
							"failed"
						],
						"description": "Current status of the document"
					}
					,
					"url": {
						"type": "string",
						"description": "URL for the Factify document"
					}
				},
				"required": [
					"id",
					"name",
					"current_version_id",
					"created_at",
					"created_by",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DocumentVersion": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Unique identifier for the document version"
					},
					"document_id": {
						"type": "string",
						"description": "ID of the parent document"
					},
					"name": {
						"type": "string",
						"description": "Name of the document version"
					},
					"description": {
						"type": "string",
						"description": "Description of the document version"
					},
					"version_date": {
						"type": "string",
						"description": "Version date (required for past versions)"
					},
					"created_at": {
						"type": "string",
						"description": "Creation timestamp"
					},
					"created_by": {
						"$ref": "#/components/schemas/Actor",
						"description": "Information about who created the version"
					},
					"status": {
						"type": "string",
						"enum": [
							"processing",
							"done",
							"failed"
						],
						"description": "Current status of the document version"
					}
					,
					"url": {
						"type": "string",
						"description": "URL for this version of the Factify document"
					}
				},
				"required": [
					"id",
					"document_id",
					"name",
					"description",
					"created_at",
					"created_by",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateDocumentVersionRequest": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Name of the document version"
					},
					"description": {
						"type": "string",
						"description": "Description of the document version"
					},
					"version_date": {
						"type": "string",
						"description": "Version date (required for past versions)"
					}
				},
				"required": [
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GenerateEntryPageRequest": {
				"properties": {
					"template_id": {
						"type": "string",
						"description": "Template identifier (required)"
					},
					"version_id": {
						"type": "string",
						"description": "Version identifier (optional, defaults to current version)"
					}
				},
				"required": [
					"template_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EntryPageResponse": {
				"properties": {
					"entry_page_url": {
						"type": "string",
						"description": "URL to the generated entry page"
					}
				},
				"required": [
					"entry_page_url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DocumentMembersInvite": {
				"type": "object",
				"required": ["invitations"],
				"properties": {
					"invitations": {
						"type": "array",
						"minItems": 1,
						"maxItems": 20,
						"items": {
							"type": "object",
							"required": ["role"],
							"properties": {
								"userId": {
									"type": "string",
									"description": "User ID (required if email is not provided)"
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "Email address (required if userId is not provided)"
								},
								"role": {
									"type": "string",
									"enum": ["Viewer", "Commenter", "Collaborator", "Admin", "Owner"],
									"description": "Role to assign to the user"
								}
							},
							"additionalProperties": false,
							"description": "Either userId or email must be provided, but not both"
						}
					},
					"sendEmail": {
						"type": "boolean",
						"default": true,
						"description": "Whether to send invitation email to users"
					}
				},
				"additionalProperties": false
			},
			"InvitationResult": {
				"type": "object",
				"required": ["document_id", "successful_invitations", "failed_invitations"],
				"properties": {
					"document_id": {
						"type": "string"
					},
					"successful_invitations": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DocumentCollaborator"
						}
					},
					"failed_invitations": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["email", "error"],
							"properties": {
								"email": {
									"type": "string",
									"format": "email"
								},
								"error": {
									"type": "string"
								}
							}
						}
					},
					"invited_by": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						}
					}
				},
				"additionalProperties": false
			},
			"DocumentMemberChanges": {
				"type": "object",
				"required": ["role"],
				"properties": {
					"role": {
						"type": "string",
						"enum": ["Viewer", "Commenter", "Collaborator", "Admin", "Owner"]
					}
				},
				"additionalProperties": false
			},
			"DocumentCollaborator": {
				"type": "object",
				"required": ["id", "role", "status", "user"],
				"properties": {
					"id": {
						"type": "string"
					},
					"role": {
						"type": "string",
						"enum": ["Viewer", "Commenter", "Collaborator", "Admin", "Owner"]
					},
					"status": {
						"type": "string",
						"enum": ["active", "invitation_pending"],
						"description": "Status of the collaborator - active means they have accepted the invitation, invitation_pending means they haven't accepted yet"
					},
					"joined_at": {
						"type": "string",
						"format": "date-time"
					},
					"user": {
						"type": "object",
						"required": ["id", "type"],
						"properties": {
							"id": {
								"type": "string"
							},
							"type": {
								"type": "string",
								"enum": ["user", "service_account"]
							},
							"name": {
								"type": "string"
							},
							"email": {
								"type": "string",
								"format": "email"
							}
						}
					}
				},
				"additionalProperties": false
			},
			"DocumentCollaboratorsPagedResponse": {
				"type": "object",
				"required": ["data", "pagination"],
				"properties": {
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DocumentCollaborator"
						}
					},
					"pagination": {
						"type": "object",
						"required": ["total", "limit"],
						"properties": {
							"total": {
								"type": "integer"
							},
							"limit": {
								"type": "integer",
								"minimum": 1,
								"maximum": 50,
								"default": 20
							},
							"nextCursor": {
								"type": "string"
							},
							"previousCursor": {
								"type": "string"
							}
						},
						"additionalProperties": false
					}
				},
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "apitsoa",
		"version": "0.0.1",
		"description": "TSOA API specification generator",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/documents": {
			"get": {
				"operationId": "GetDocuments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Document"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"summary": "List all documents",
				"tags": [
					"Documents"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateDocument",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Document"
								}
							}
						}
					},
					"201": {
						"description": "Document created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Document"
								}
							}
						}
					}
				},
				"summary": "Create a new document",
				"tags": [
					"Documents"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"payload": {
										"type": "string",
										"format": "binary"
									},
									"name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									}
								},
								"required": [
									"payload",
									"name"
								]
							}
						}
					}
				}
			}
		},
		"/documents/{id}": {
			"get": {
				"operationId": "GetDocument",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Document"
								}
							}
						}
					}
				},
				"summary": "Get document by ID",
				"tags": [
					"Documents"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/documents/{document_id}/versions": {
			"get": {
				"operationId": "GetDocumentVersions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/DocumentVersion"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"summary": "List document versions",
				"tags": [
					"Document Versions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateDocumentVersion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DocumentVersion"
								}
							}
						}
					},
					"201": {
						"description": "Document version created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DocumentVersion"
								}
							}
						}
					}
				},
				"summary": "Create new document version",
				"tags": [
					"Document Versions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateDocumentVersionRequest"
							}
						}
					}
				}
			}
		},
		"/documents/{document_id}/versions/{version_id}": {
			"get": {
				"operationId": "GetDocumentVersion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DocumentVersion"
								}
							}
						}
					}
				},
				"summary": "Get specific document version",
				"tags": [
					"Document Versions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "version_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/documents/{document_id}/entry-page": {
			"post": {
				"operationId": "GenerateEntryPage",
				"responses": {
					"200": {
						"description": "Entry page generated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EntryPageResponse"
								}
							}
						}
					}
				},
				"summary": "Generate an entry page for a document",
				"tags": [
					"Documents"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateEntryPageRequest"
							}
						}
					}
				}
			}
		},
		"/documents/{document_id}/collaborators": {
			"post": {
				"operationId": "InviteDocumentCollaborators",
				"responses": {
					"201": {
						"description": "Users invited successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InvitationResult"
								}
							}
						}
					},
					"400": {
						"description": "Invalid parameters"
					},
					"404": {
						"description": "Document not found"
					},
					"409": {
						"description": "One or more users already have access"
					}
				},
				"summary": "Invites users to collaborate on a document by sending an invitation email",
				"tags": [
					"Document Collaborators"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DocumentMembersInvite"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetDocumentCollaborators",
				"responses": {
					"200": {
						"description": "Document collaborators retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DocumentCollaboratorsPagedResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid parameters"
					},
					"404": {
						"description": "Document not found"
					}
				},
				"summary": "Retrieves a pageable list of document collaborators",
				"tags": [
					"Document Collaborators"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 20,
							"minimum": 1,
							"maximum": 50
						}
					},
					{
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 0
						}
					}
				]
			}
		},
		"/documents/{document_id}/collaborators/{collaborator_id}": {
			"get": {
				"operationId": "GetDocumentCollaborator",
				"responses": {
					"200": {
						"description": "Document collaborator retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DocumentCollaborator"
								}
							}
						}
					},
					"400": {
						"description": "Invalid parameters"
					},
					"404": {
						"description": "Document or collaborator not found"
					}
				},
				"summary": "Retrieves details of a specific document collaborator",
				"tags": [
					"Document Collaborators"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "collaborator_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateDocumentCollaborator",
				"responses": {
					"200": {
						"description": "Collaborator role updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DocumentCollaborator"
								}
							}
						}
					},
					"400": {
						"description": "Invalid role"
					},
					"404": {
						"description": "Document or collaborator not found"
					},
					"409": {
						"description": "Ownership constraint violated"
					}
				},
				"summary": "Updates the role of a document collaborator",
				"tags": [
					"Document Collaborators"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "collaborator_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DocumentMemberChanges"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "RemoveDocumentCollaborator",
				"responses": {
					"204": {
						"description": "Collaborator removed successfully"
					},
					"400": {
						"description": "Invalid parameters"
					},
					"404": {
						"description": "Document or collaborator not found"
					}
				},
				"summary": "Removes a collaborator from a document",
				"tags": [
					"Document Collaborators"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "document_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "collaborator_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"tags": [
		{
			"name": "Documents",
			"description": "Document management operations"
		},
		{
			"name": "Document Versions",
			"description": "Document version management operations"
		},
		{
			"name": "Document Collaborators",
			"description": "Document collaborator and access control operations"
		}
	]
}